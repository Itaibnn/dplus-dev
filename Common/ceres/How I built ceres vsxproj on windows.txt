step 1: build cmakelists.txt within the folder ceres (not bothering to make a bin, etc)

initially I used -DEIGEN_INCLUDE_DIR_HINTS="C:\Users\devora\Sources\dplus\dplus-dev\Common" -G "Visual Studio 15 2017 Win64"

later I modified cmakelists.txt:
get_filename_component(PARENT_DIR ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)
set (EIGEN_INCLUDE_DIR ${PARENT_DIR})

I did this because visual studio would rerun cmakelists.txt and it wouldn't work b

I also set miniglog to ON and gflags to OFF in cmakelists.txt

building in the main folder means config.h is overwritten with windows settings. this is ok, cmake on linux will just overwrite it.

step 2: 

the ceres.vsxproj file is written to internal\ceres unlike all the other vsxprojs. It does not need to be there. I moved it back into the main ceres folder.

step 3:
the ceres.vsxproj is full of hardcoded paths that would make it not compile on any other computer. I opened up notepad++ and did a search for "C:"

"C:/path/path/Common/ceres" I replaced with "$(ProjectDir)", 
"C:/path/path/Common" I replaced with "$(ProjectDir)\..\..\Common"

there was also a section of code runing to check cmake (a custom build command arouynd 52 lines long including 12 hardcoded paths). It had hardcoded paths to where cmake was installed, etc. I deleted it entirely. 

step 4:
add ceres to Backend/External projects and then to Backend/References.
under Backend Properties add to include paths:  ceres\internal\ceres\miniglog, ceres\config, and ceres\include 