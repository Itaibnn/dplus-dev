name: Create DPlus API Wheels
on:
  push:
    tags:
      - v*

jobs:
  manylinux-wheels:
    runs-on: ubuntu-latest
    name: Create the manylinux wheels for all supported Python versions
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build docker image
        working-directory: PythonInterface
        run: docker build -f Dockerfile.manylinux .. -t dplus-api-manylinux:latest
      - name: Copy wheels
        working-directory: PythonInterface
        run: |
          docker run --rm --name dplus-api-manylinux -v `pwd`:/external dplus-api-manylinux:latest
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: PythonInterface/dplus-api-wheels/dplus*.whl
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "DPlus API Manylinux Wheels"

  windows-wheels:
    runs-on: windows-2019  # Required for Visual Studio 2019
    strategy:
      matrix:
        python-version: [ '3.9' ] # [ '3.7', '3.8', '3.9', '3.10' ]
    name: Create the Windows Wheel for Python ${{ matrix.python-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install boost
        uses: MarkusJx/install-boost@v2.1.0
        id: install-boost
        with:
          boost_version: 1.78.0
          platform_version: 2019
          toolset: msvc
      - name: Set up CUDA
        uses: Jimver/cuda-toolkit@v0.2.5
        id: cuda-toolkit
        with:
          cuda: '11.5.1'
          method: 'network'
          sub-packages: '["nvcc", "visual_studio_integration"]'
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1          
      - name: Compile Backend
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: |
          msbuild Dplus2019.sln /p:Configuration=Release /p:Platform=x64
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Set Python environment
        working-directory: PythonInterface
        run: |
          pip install -r requirements.txt
          pip install wheel
      - name: Create the wheel
        working-directory: PythonInterface
        run: |
          python setup.py prepare
          pip wheel .
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: PythonInterface/dplus*.whl
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "Windows Wheels"
